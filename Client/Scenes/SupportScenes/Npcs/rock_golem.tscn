[gd_scene load_steps=8 format=2]

[ext_resource path="res://Scenes/SupportScenes/Npcs/BasicEnemy.gd" type="Script" id=1]
[ext_resource path="res://Assets/npcs/enemies_16x16.png" type="Texture" id=2]

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform vec4 line_color : hint_color = vec4(0, 0, 0, 1);
uniform float line_thickness : hint_range(0, 10) = 0.25;
uniform float glow_thickness : hint_range(0, 20) = 4;
uniform vec4 glow_color : hint_color = vec4(0, 0, 0, 0.2);

void fragment() {
    vec2 size = TEXTURE_PIXEL_SIZE * line_thickness;
    vec2 glow_size = TEXTURE_PIXEL_SIZE * glow_thickness;
    
    float outline = 0.0;
    outline += texture(TEXTURE, UV + vec2(-size.x, 0)).a;
    outline += texture(TEXTURE, UV + vec2(size.x, 0)).a;
    outline += texture(TEXTURE, UV + vec2(0, -size.y)).a;
    outline += texture(TEXTURE, UV + vec2(0, size.y)).a;
    outline += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
    outline += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
    outline += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
    outline += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
    outline = min(outline, 1.0);

    float glow = 0.0;
    for (float i = 1.0; i <= glow_thickness; i++) {
        vec2 offset = TEXTURE_PIXEL_SIZE * i;
        glow += texture(TEXTURE, UV + vec2(-offset.x, 0)).a / i;
        glow += texture(TEXTURE, UV + vec2(offset.x, 0)).a / i;
        glow += texture(TEXTURE, UV + vec2(0, -offset.y)).a / i;
        glow += texture(TEXTURE, UV + vec2(0, offset.y)).a / i;
        glow += texture(TEXTURE, UV + vec2(-offset.x, -offset.y)).a / i;
        glow += texture(TEXTURE, UV + vec2(offset.x, -offset.y)).a / i;
        glow += texture(TEXTURE, UV + vec2(-offset.x, offset.y)).a / i;
        glow += texture(TEXTURE, UV + vec2(offset.x, offset.y)).a / i;
    }
    glow = min(glow / glow_thickness, 1.0) - outline;

    vec4 color = texture(TEXTURE, UV);
    vec4 outline_color = mix(color, line_color, outline - color.a);
    vec4 glow_color_mixed = mix(outline_color, glow_color, glow * (1.0 - color.a));
    
    COLOR = glow_color_mixed;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/line_color = Color( 0, 0, 0, 1 )
shader_param/line_thickness = 0.4
shader_param/glow_thickness = 0.0
shader_param/glow_color = Color( 0, 0, 0, 0 )

[sub_resource type="Animation" id=6]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 2 ) ]
}

[sub_resource type="Animation" id=7]
resource_name = "Walk"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:hframes")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 1,
"values": [  ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:frame_coords")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1e-05, 3.62915e-05 ),
"update": 0,
"values": [ Vector2( 0, 2 ), Vector2( 1, 2 ) ]
}

[sub_resource type="RectangleShape2D" id=1]

[node name="enemy" type="Node2D"]
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 5 )
scale = Vector2( 1.00334, 1 )
texture = ExtResource( 2 )
hframes = 15
vframes = 15
frame = 30

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "Walk"
anims/RESET = SubResource( 6 )
anims/Walk = SubResource( 7 )

[node name="Area2D" type="Area2D" parent="."]
collision_layer = 2
collision_mask = 4

[node name="Hitbox" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 1 )
